{"version":3,"file":"static/js/35.7431dc2a.chunk.js","mappings":"wNA2GA,EAvGuB,WACnB,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BE,EAAA,GAAUA,EAAA,GAetB,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACjCF,EAAAA,EAAAA,KAAA,OACII,IAAI,+JACJC,IAAI,aAGZF,EAAAA,EAAAA,MAACG,EAAAA,EAAI,CACDL,UAAU,gBACVM,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVE,KAAK,aACLC,cAAe,CAAEC,UAAU,GAC3BC,SAhCC,SAACC,GACdC,QAAQC,IAAI,WAAYF,EAC5B,EA+BgBG,eA7BO,SAACC,GACpBH,QAAQC,IAAI,UAAWE,EAC3B,EA2B+ChB,SAAA,EAE/BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,sCAE1BF,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAS,CACNL,UAAU,QACVkB,MAAM,wCACNT,KAAK,cACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8CAA6BpB,UAEhEF,EAAAA,EAAAA,KAACuB,EAAAA,EAAAA,SAAc,CAACC,YAAY,gBAEhCxB,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAS,CACNL,UAAU,QACVS,KAAK,WACLS,MAAM,8BACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uDAGjBG,aAAW,EAAAvB,UAEXF,EAAAA,EAAAA,KAACuB,EAAAA,EAAAA,SAAc,OAGnBvB,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAS,CACNL,UAAU,QACVS,KAAK,UACLS,MAAM,iDACNO,aAAc,CAAC,YACfD,aAAW,EACXL,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,sDAEb,SAAAK,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACpBC,UAAS,SAACC,EAAGC,GACT,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,IAAIC,MAAM,mDAFrBF,QAAQG,SAGvB,EACH,GACHjC,UAEFF,EAAAA,EAAAA,KAACuB,EAAAA,EAAAA,SAAc,OAGnBvB,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,KAAS,CAACL,UAAU,aAAYC,UAC7BF,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CACHC,KAAK,UACLC,SAAS,SACTrC,UAAU,oBACVsC,MAAO,CAAEC,MAAO,QAAStC,SAC5B,gCAQzB,C","sources":["page/Auth/ChangePassword/ChangePassword.jsx"],"sourcesContent":["import { Button, Checkbox, Col, Form, Input, Radio, Row, Select } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport '../Register/Register.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst ChangePassword = () => {\r\n    const [value, setValue] = useState(null);\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <div className=\"illustration-wrapper\">\r\n                    <img\r\n                        src=\"https://mixkit.imgix.net/art/preview/mixkit-left-handed-man-sitting-at-a-table-writing-in-a-notebook-27-original-large.png?q=80&auto=format%2Ccompress&h=700\"\r\n                        alt=\"Login\"\r\n                    />\r\n                </div>\r\n                <Form\r\n                    className=\"form-changepw\"\r\n                    labelCol={{\r\n                        span: 24,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 24,\r\n                    }}\r\n                    name=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <p className=\"form-title\">Đổi mật khẩu</p>\r\n\r\n                    <Form.Item\r\n                        className=\"label\"\r\n                        label=\"Mật khẩu hiện tại\"\r\n                        name=\"passwordold\"\r\n                        rules={[{ required: true, message: 'Vui lòng nhập mật khẩu!' }]}\r\n                    >\r\n                        <Input.Password placeholder=\"Password\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        className=\"label\"\r\n                        name=\"password\"\r\n                        label=\"Mật khẩu mới\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập mật khẩu mới!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        className=\"label\"\r\n                        name=\"confirm\"\r\n                        label=\"Nhập lại mật khẩu mới\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập lại mật khẩu!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('Mật khẩu mới không khớp'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item className=\"btn-submit\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"login-form-button\"\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            Cập nhật\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","_jsx","className","children","_jsxs","src","alt","Form","labelCol","span","wrapperCol","name","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","label","rules","required","message","Input","placeholder","hasFeedback","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","type","htmlType","style","width"],"sourceRoot":""}